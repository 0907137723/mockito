apply from: rootProject.file("gradle/publish.gradle")

task (release) {
    onlyIf {
        def branch = System.env.TRAVIS_BRANCH
        def pr = System.env.TRAVIS_PULL_REQUEST
        def releasable = pr == 'false' && branch == 'master'
        logger.lifecycle("Skipping release: {}, branch: {}, pull request: {}.", !releasable, branch, pr)
        releasable
    }
    doLast {
        run "./gradlew", "bintrayUpload"
        publishJavadocNow()
        run "git", "checkout", "master"
        run "./gradlew", "incrementVersion"
        run "git", "config", "user.email", "szczepiq@gmail.com"
        run "git", "config", "user.name", "Szczepan Faber"
        String message = '"Increment version by Travis CI build #' + System.env.TRAVIS_BUILD_NUMBER + ' [ci skip]"'
        run "git", "commit", "-m", message, "version.properties"
        run "git", "push", new MaskedArg(value: "https://szczepiq:${System.env.GH_TOKEN}@github.com/mockito/mockito.git"), "master", "-q"
        publishJavadocNow()
    }
}

void publishJavadocNow() {
    run "git", "checkout", "gh-pages"
    run "git", "rm", "*"
    project.copy {
        from "build/javadoc"
        into "docs/$project.version"
    }
    project.copy {
        from "build/javadoc"
        into "docs/current"
    }
    run "git", "add", "docs"
    run "git", "commit", "-m", '"Publish javadoc by Travis CI build #' + System.env.TRAVIS_BUILD_NUMBER + ' [ci skip]"'
    run "git", "push", new MaskedArg(value: "https://szczepiq:${System.env.GH_TOKEN}@github.com/mockito/mockito.git"), "gh-pages", "-q"
}

task publishJavadoc {
    doLast {
        publishJavadocNow()
    }
}

void run(Object ... args) {
    logger.lifecycle("--- Executing: {}", args.join(" "))
    exec { commandLine args.collect { it instanceof MaskedArg? it.value : it.toString()} }
    logger.lifecycle("--- Completed!", args)
}

class MaskedArg {
    String value
    String toString() { "<masked>" }
}
