import org.mockito.release.notes.Notes

def notesFile = project.file("doc/release-notes/official.md")

//TODO add task that calculates previous version
ext.getPreviousVersion = {
    def firstLine = notesFile.withReader { it.readLine() }
    return Notes.previousVersion(firstLine).previousVersion
}

ext.updateReleaseNotes = {
    project.logger.lifecycle("Building and updating release notes in {}", notesFile)
    def builder = Notes.gitHubNotesBuilder(project, "GH_TOKEN")
    def prev = "v" + getPreviousVersion()
    def current = "HEAD"
    project.logger.lifecycle("Building notes for revisions: {} -> {}", prev, current)
    def newContent = builder.buildNotes(prev, current)
    def existing = notesFile.text
    notesFile.text = newContent + existing
    project.logger.lifecycle("Successfully updated release notes!")
}

//TODO SF allow dry-run generation of the release notes without GH_TOKEN
//TODO SF document how to work with release notes, e.g. that we only show closed tickets, etc.
task updateReleaseNotes {
    description "Updates release notes file. Useful for previewing the release notes."
    doLast { updateReleaseNotes() }
}